{"ast":null,"code":"var _jsxFileName = \"/Users/toneychai/Desktop/question/src/App.js\";\nimport React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result'; // import logo from './svg/logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      // answer: '',\n      // answersCount: {},\n      // result: '',\n      final: [],\n      choose: false\n    };\n\n    this.handleAnswerSelected = event => {\n      console.log(\"event\", event.currentTarget);\n      this.setUserAnswer(event.currentTarget.value);\n      this.setState({\n        choose: true\n      }); // if (this.state.questionId < quizQuestions.length) {\n      //     setTimeout(() => this.setNextQuestion(), 300);\n      // } else {\n      //     // already get to the last question\n      //     setTimeout(() => this.setResults(this.getResults()), 300);\n      // }\n    };\n\n    this.nextStep = () => {\n      this.setNextQuestion = this.setNextQuestion.bind(this);\n\n      if (this.state.questionId < quizQuestions.length) {\n        setTimeout(() => this.setNextQuestion(), 300);\n      } else {\n        // already get to the last question\n        setTimeout(() => this.setResults(this.getResults()), 300);\n      }\n    };\n\n    this.setUserAnswer = param => {\n      const len = this.state.final.length;\n\n      if (len === this.state.counter) {\n        this.setState({\n          final: [...this.state.final, param]\n        });\n      } else {\n        const array = [...this.state.final];\n        array.splice(this.state.counter, 1);\n        console.log(\"test\", array);\n        this.setState({\n          final: [...array, param]\n        });\n      }\n    };\n\n    this.setNextQuestion = () => {\n      const counter = this.state.counter + 1;\n      const questionId = this.state.questionId + 1;\n      this.setState({\n        //设置问题和选项\n        counter: counter,\n        questionId: questionId,\n        question: quizQuestions[counter].question,\n        answerOptions: quizQuestions[counter].answers,\n        // answer: '',\n        choose: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    //创造一个字典\n    const Options = quizQuestions.map(question => question.answers);\n    this.setState({\n      //初始状态\n      question: quizQuestions[0].question,\n      // answerOptions: shuffledAnswerOptions[0]\n      answerOptions: Options[0]\n    });\n    console.log(\"choose\", this.state.answerOptions);\n  }\n  /*** What is this ***/\n\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n    console.log(\"test answer: \", this.state.answer);\n    return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n  }\n\n  setResults(result) {\n    if (result.length === 1) {\n      this.setState({\n        result: result[0]\n      });\n    } else {\n      this.setState({\n        result: 'Undetermined'\n      });\n    }\n  }\n\n  renderQuiz() {\n    // if(this.state.result)\n    //   console.log(\"oo\");\n    // else{\n    //   console.log('ya');\n    // // }\n    // console.log(\"this State\",this.state);\n    return /*#__PURE__*/React.createElement(Quiz // answer={this.state.answer}\n    , {\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: quizQuestions.length,\n      onAnswerSelected: this.handleAnswerSelected,\n      nextStep: this.nextStep,\n      choose: this.state.choose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderResult() {\n    return /*#__PURE__*/React.createElement(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    });\n  } //Guess 如果state.result 不是null那么 返回 Result\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, this.state.result ? this.renderResult() : this.renderQuiz()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/toneychai/Desktop/question/src/App.js"],"names":["React","Component","quizQuestions","Quiz","Result","App","state","counter","questionId","question","answerOptions","final","choose","handleAnswerSelected","event","console","log","currentTarget","setUserAnswer","value","setState","nextStep","setNextQuestion","bind","length","setTimeout","setResults","getResults","param","len","array","splice","answers","componentDidMount","Options","map","answersCount","answersCountKeys","Object","keys","answersCountValues","key","maxAnswerCount","Math","max","apply","answer","filter","result","renderQuiz","renderResult","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\n// import logo from './svg/logo.svg';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        counter: 0,\n        questionId: 1,\n        question: '',\n        answerOptions: [],\n        // answer: '',\n        // answersCount: {},\n        // result: '',\n        final :[],\n        choose: false\n    };\n\n    componentDidMount() {\n        //创造一个字典\n        const Options = quizQuestions.map(question =>\n            question.answers\n        );\n        this.setState({\n            //初始状态\n            question: quizQuestions[0].question,\n            // answerOptions: shuffledAnswerOptions[0]\n            answerOptions: Options[0]\n        });\n        console.log(\"choose\",this.state.answerOptions);\n    }\n\n    /*** What is this ***/\n    handleAnswerSelected=(event)=> {\n        console.log(\"event\",event.currentTarget);\n        this.setUserAnswer(event.currentTarget.value);\n        this.setState({\n            choose:true\n        })\n        // if (this.state.questionId < quizQuestions.length) {\n        //     setTimeout(() => this.setNextQuestion(), 300);\n        // } else {\n        //     // already get to the last question\n        //     setTimeout(() => this.setResults(this.getResults()), 300);\n        // }\n    }\n    nextStep=()=>{\n        this.setNextQuestion=this.setNextQuestion.bind(this)\n        if (this.state.questionId < quizQuestions.length) {\n\n            setTimeout(() => this.setNextQuestion(), 300);\n        } else {\n            // already get to the last question\n            setTimeout(() => this.setResults(this.getResults()), 300);\n        }\n    }\n\n    setUserAnswer =(param)=> {\n        const len=this.state.final.length;\n        if(len=== this.state.counter) {\n            this.setState({\n                    final: [...this.state.final, param]\n                }\n            );\n        }\n        else\n        {\n            const array=[...this.state.final];\n            array.splice(this.state.counter,1);\n            console.log(\"test\",array);\n            this.setState({\n                    final: [...array,param]\n                }\n            );\n        }\n    }\n\n    setNextQuestion=()=> {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n\n        this.setState({\n            //设置问题和选项\n            counter: counter,\n            questionId: questionId,\n            question: quizQuestions[counter].question,\n            answerOptions: quizQuestions[counter].answers,\n            // answer: '',\n            choose:false\n        });\n    }\n\n    getResults() {\n        const answersCount = this.state.answersCount;\n        const answersCountKeys = Object.keys(answersCount);\n        const answersCountValues = answersCountKeys.map(key => answersCount[key]);\n        const maxAnswerCount = Math.max.apply(null, answersCountValues);\n        console.log(\"test answer: \",this.state.answer);\n        return answersCountKeys.filter(key => answersCount[key] === maxAnswerCount);\n    }\n\n    setResults(result) {\n        if (result.length === 1) {\n            this.setState({ result: result[0] });\n        } else {\n            this.setState({ result: 'Undetermined' });\n        }\n    }\n\n    renderQuiz() {\n        // if(this.state.result)\n        //   console.log(\"oo\");\n        // else{\n        //   console.log('ya');\n        // // }\n        // console.log(\"this State\",this.state);\n        return (\n            <Quiz\n                // answer={this.state.answer}\n                answerOptions={this.state.answerOptions}\n                questionId={this.state.questionId}\n                question={this.state.question}\n                questionTotal={quizQuestions.length}\n                onAnswerSelected={this.handleAnswerSelected}\n                nextStep={this.nextStep}\n                choose={this.state.choose}\n            />\n        );\n    }\n\n    renderResult() {\n        return <Result/>;\n    }\n//Guess 如果state.result 不是null那么 返回 Result\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                {/*<div className=\"App-header\">*/}\n                {/*<img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n                {/*</div>*/}\n                {this.state.result ? this.renderResult() : this.renderQuiz()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}