{"ast":null,"code":"var _jsxFileName = \"/Users/toneychai/Desktop/question/src/components/Quiz.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // import { CSSTransitionGroup } from 'react-transition-group';\n\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton'; //每一道题的容器： 标题+问题+选项\n\nfunction Quiz(props) {\n  //生成每一个选项\n  function renderAnswerOptions(key) {\n    console.log(\"key\", key);\n    return /*#__PURE__*/React.createElement(AnswerOption, {\n      key: key.content,\n      answerContent: key.content // answerType={key.type}\n      ,\n      answer: props.answer,\n      questionId: props.questionId,\n      onAnswerSelected: props.onAnswerSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    //  没用的样式变换\n    // <CSSTransitionGroup\n    //   className=\"container\"\n    //   component=\"div\"\n    //   transitionName=\"fade\"\n    //   transitionEnterTimeout={800}\n    //   transitionLeaveTimeout={500}\n    //   transitionAppear\n    //   transitionAppearTimeout={500}\n    // >\n    React.createElement(MuiThemeProvider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      title: \" Enter Personal Details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(QuestionCount, {\n      counter: props.questionId,\n      total: props.questionTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      content: props.question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"answerOptions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, props.answerOptions.map(renderAnswerOptions)), /*#__PURE__*/React.createElement(RaisedButton, {\n      label: \"Continue\",\n      primary: true,\n      style: styles.button,\n      onClick: this.continue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }))) // </CSSTransitionGroup>\n\n  );\n}\n\nQuiz.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};\nconst styles = {\n  button: {\n    margin: 15\n  }\n};\nexport default Quiz;","map":{"version":3,"sources":["/Users/toneychai/Desktop/question/src/components/Quiz.js"],"names":["React","Component","PropTypes","Question","QuestionCount","AnswerOption","MuiThemeProvider","AppBar","TextField","RaisedButton","Quiz","props","renderAnswerOptions","key","console","log","content","answer","questionId","onAnswerSelected","questionTotal","question","answerOptions","map","styles","button","continue","propTypes","string","isRequired","array","number","func","margin"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,0BAAzB,C,CAEA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB;AACA,WAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,GAAlB;AACA,wBACI,oBAAC,YAAD;AACI,MAAA,GAAG,EAAEA,GAAG,CAACG,OADb;AAEI,MAAA,aAAa,EAAEH,GAAG,CAACG,OAFvB,CAGI;AAHJ;AAII,MAAA,MAAM,EAAEL,KAAK,CAACM,MAJlB;AAKI,MAAA,UAAU,EAAEN,KAAK,CAACO,UALtB;AAMI,MAAA,gBAAgB,EAAEP,KAAK,CAACQ,gBAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAUH;;AAED;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,wBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEJ,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAER,KAAK,CAACO,UAA9B;AAA0C,MAAA,KAAK,EAAEP,KAAK,CAACS,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,eAGJ,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAET,KAAK,CAACU,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHI,eAIJ;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,KAAK,CAACW,aAAN,CAAoBC,GAApB,CAAwBX,mBAAxB,CADL,CAJI,eAOI,oBAAC,YAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,OAAO,EAAE,IAFb;AAGI,MAAA,KAAK,EAAEY,MAAM,CAACC,MAHlB;AAII,MAAA,OAAO,EAAE,KAAKC,QAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CAZR,CA4BI;;AA5BJ;AA8BH;;AAEDhB,IAAI,CAACiB,SAAL,GAAiB;AACbV,EAAAA,MAAM,EAAEf,SAAS,CAAC0B,MAAV,CAAiBC,UADZ;AAEbP,EAAAA,aAAa,EAAEpB,SAAS,CAAC4B,KAAV,CAAgBD,UAFlB;AAGbR,EAAAA,QAAQ,EAAEnB,SAAS,CAAC0B,MAAV,CAAiBC,UAHd;AAIbX,EAAAA,UAAU,EAAEhB,SAAS,CAAC6B,MAAV,CAAiBF,UAJhB;AAKbT,EAAAA,aAAa,EAAElB,SAAS,CAAC6B,MAAV,CAAiBF,UALnB;AAMbV,EAAAA,gBAAgB,EAAEjB,SAAS,CAAC8B,IAAV,CAAeH;AANpB,CAAjB;AASA,MAAML,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE;AACJQ,IAAAA,MAAM,EAAC;AADH;AADC,CAAb;AAKA,eAAevB,IAAf","sourcesContent":["import React,{Component} from 'react'\nimport PropTypes from 'prop-types';\n// import { CSSTransitionGroup } from 'react-transition-group';\nimport Question from '../components/Question';\nimport QuestionCount from '../components/QuestionCount';\nimport AnswerOption from '../components/AnswerOption';\n\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\n\n//每一道题的容器： 标题+问题+选项\nfunction Quiz(props) {\n    //生成每一个选项\n    function renderAnswerOptions(key) {\n        console.log(\"key\",key);\n        return (\n            <AnswerOption\n                key={key.content}\n                answerContent={key.content}\n                // answerType={key.type}\n                answer={props.answer}\n                questionId={props.questionId}\n                onAnswerSelected={props.onAnswerSelected}\n            />\n        );\n    }\n\n    return (\n        //  没用的样式变换\n        // <CSSTransitionGroup\n        //   className=\"container\"\n        //   component=\"div\"\n        //   transitionName=\"fade\"\n        //   transitionEnterTimeout={800}\n        //   transitionLeaveTimeout={500}\n        //   transitionAppear\n        //   transitionAppearTimeout={500}\n        // >\n\n            <MuiThemeProvider>\n                <React.Fragment>\n                    <AppBar title=\" Enter Personal Details\"/>\n            <QuestionCount counter={props.questionId} total={props.questionTotal} />\n            <Question content={props.question} />\n            <ul className=\"answerOptions\">\n                {props.answerOptions.map(renderAnswerOptions)}\n            </ul>\n                    <RaisedButton\n                        label=\"Continue\"\n                        primary={true}\n                        style={styles.button}\n                        onClick={this.continue}\n                    />\n                </React.Fragment>\n           </MuiThemeProvider>\n        // </CSSTransitionGroup>\n    );\n}\n\nQuiz.propTypes = {\n    answer: PropTypes.string.isRequired,\n    answerOptions: PropTypes.array.isRequired,\n    question: PropTypes.string.isRequired,\n    questionId: PropTypes.number.isRequired,\n    questionTotal: PropTypes.number.isRequired,\n    onAnswerSelected: PropTypes.func.isRequired\n};\n\nconst styles={\n    button :{\n        margin:15\n    }\n}\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}