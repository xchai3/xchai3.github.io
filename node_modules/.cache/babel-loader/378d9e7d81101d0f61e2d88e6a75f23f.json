{"ast":null,"code":"var _jsxFileName = \"/Users/toneychai/Desktop/question/src/App.js\";\nimport React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result'; // import logo from './svg/logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      final: [],\n      choose: false\n    };\n\n    this.handleAnswerSelected = event => {\n      console.log(\"event\", event.currentTarget);\n      this.setUserAnswer(event.currentTarget.value);\n      this.setState({\n        choose: true\n      });\n    };\n\n    this.nextStep = () => {\n      this.setNextQuestion = this.setNextQuestion.bind(this);\n\n      if (this.state.questionId < quizQuestions.length) {\n        setTimeout(() => this.setNextQuestion(), 300);\n      } else {\n        // already get to the last question\n        const questionId = this.state.questionId + 1;\n        this.setState({\n          questionId: questionId\n        });\n      }\n    };\n\n    this.setUserAnswer = param => {\n      const len = this.state.final.length;\n\n      if (len === this.state.counter) {\n        this.setState({\n          final: [...this.state.final, param]\n        });\n      } else {\n        const array = [...this.state.final];\n        array.splice(this.state.counter, 1);\n        console.log(\"test\", array);\n        this.setState({\n          final: [...array, param]\n        });\n      }\n    };\n\n    this.setNextQuestion = () => {\n      const counter = this.state.counter + 1;\n      const questionId = this.state.questionId + 1;\n      this.setState({\n        //设置问题和选项\n        counter: counter,\n        questionId: questionId,\n        question: quizQuestions[counter].question,\n        answerOptions: quizQuestions[counter].answers,\n        choose: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    //创造一个字典\n    const Options = quizQuestions.map(question => question.answers);\n    this.setState({\n      //初始状态\n      question: quizQuestions[0].question,\n      // answerOptions: shuffledAnswerOptions[0]\n      answerOptions: Options[0]\n    });\n    console.log(\"choose\", this.state.answerOptions);\n  }\n  /*** What is this ***/\n\n\n  renderQuiz() {\n    return /*#__PURE__*/React.createElement(Quiz // answer={this.state.answer}\n    , {\n      answerOptions: this.state.answerOptions,\n      questionId: this.state.questionId,\n      question: this.state.question,\n      questionTotal: quizQuestions.length,\n      onAnswerSelected: this.handleAnswerSelected,\n      nextStep: this.nextStep,\n      choose: this.state.choose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    });\n  }\n\n  renderResult() {\n    return /*#__PURE__*/React.createElement(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.state.questionId > quizQuestions.length ? this.renderResult() : this.renderQuiz()));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/toneychai/Desktop/question/src/App.js"],"names":["React","Component","quizQuestions","Quiz","Result","App","state","counter","questionId","question","answerOptions","final","choose","handleAnswerSelected","event","console","log","currentTarget","setUserAnswer","value","setState","nextStep","setNextQuestion","bind","length","setTimeout","param","len","array","splice","answers","componentDidMount","Options","map","renderQuiz","renderResult","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport quizQuestions from './api/quizQuestions';\nimport Quiz from './components/Quiz';\nimport Result from './components/Result';\n// import logo from './svg/logo.svg';\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        counter: 0,\n        questionId: 1,\n        question: '',\n        answerOptions: [],\n        final :[],\n        choose: false\n    };\n\n    componentDidMount() {\n        //创造一个字典\n        const Options = quizQuestions.map(question =>\n            question.answers\n        );\n        this.setState({\n            //初始状态\n            question: quizQuestions[0].question,\n            // answerOptions: shuffledAnswerOptions[0]\n            answerOptions: Options[0]\n        });\n        console.log(\"choose\",this.state.answerOptions);\n    }\n\n    /*** What is this ***/\n    handleAnswerSelected=(event)=> {\n        console.log(\"event\",event.currentTarget);\n        this.setUserAnswer(event.currentTarget.value);\n        this.setState({\n            choose:true\n        })\n    }\n    nextStep=()=>{\n        this.setNextQuestion=this.setNextQuestion.bind(this)\n        if (this.state.questionId < quizQuestions.length) {\n\n            setTimeout(() => this.setNextQuestion(), 300);\n        }\n        else {\n            // already get to the last question\n            const questionId = this.state.questionId + 1;\n            this.setState({questionId:questionId})\n        }\n    }\n\n    setUserAnswer =(param)=> {\n        const len=this.state.final.length;\n        if(len=== this.state.counter) {\n            this.setState({\n                    final: [...this.state.final, param]\n                }\n            );\n        }\n        else\n        {\n            const array=[...this.state.final];\n            array.splice(this.state.counter,1);\n            console.log(\"test\",array);\n            this.setState({\n                    final: [...array,param]\n                }\n            );\n        }\n    }\n\n    setNextQuestion=()=> {\n        const counter = this.state.counter + 1;\n        const questionId = this.state.questionId + 1;\n\n        this.setState({\n            //设置问题和选项\n            counter: counter,\n            questionId: questionId,\n            question: quizQuestions[counter].question,\n            answerOptions: quizQuestions[counter].answers,\n            choose:false\n        });\n    }\n\n\n    renderQuiz() {\n        return (\n            <Quiz\n                // answer={this.state.answer}\n                answerOptions={this.state.answerOptions}\n                questionId={this.state.questionId}\n                question={this.state.question}\n                questionTotal={quizQuestions.length}\n                onAnswerSelected={this.handleAnswerSelected}\n                nextStep={this.nextStep}\n                choose={this.state.choose}\n            />\n        );\n    }\n\n    renderResult() {\n        return <Result/>;\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                {this.state.questionId>quizQuestions.length ? this.renderResult() : this.renderQuiz()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}